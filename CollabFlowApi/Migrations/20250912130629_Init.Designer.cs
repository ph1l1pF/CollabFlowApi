// <auto-generated />
using System;
using CollabFlowApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CollabFlowApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250912130629_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CollabFlowApi.Collaboration", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id", "UserId")
                        .IsUnique();

                    b.ToTable("collaborations");
                });

            modelBuilder.Entity("CollabFlowApi.Repositories.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("AppleSub")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AppleSub")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("CollabFlowApi.Collaboration", b =>
                {
                    b.OwnsOne("CollabFlowApi.Deadline", "Deadline", b1 =>
                        {
                            b1.Property<string>("CollaborationId")
                                .HasColumnType("text");

                            b1.Property<DateTime>("Date")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<int?>("NotifyDaysBefore")
                                .HasColumnType("integer");

                            b1.Property<bool>("SendNotification")
                                .HasColumnType("boolean");

                            b1.HasKey("CollaborationId");

                            b1.ToTable("collaborations");

                            b1.WithOwner()
                                .HasForeignKey("CollaborationId");
                        });

                    b.OwnsOne("CollabFlowApi.Fee", "Fee", b1 =>
                        {
                            b1.Property<string>("CollaborationId")
                                .HasColumnType("text");

                            b1.Property<double>("Amount")
                                .HasColumnType("double precision");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("CollaborationId");

                            b1.ToTable("collaborations");

                            b1.WithOwner()
                                .HasForeignKey("CollaborationId");
                        });

                    b.OwnsOne("CollabFlowApi.Partner", "Partner", b1 =>
                        {
                            b1.Property<string>("CollaborationId")
                                .HasColumnType("text");

                            b1.Property<string>("CompanyName")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("CustomerNumber")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Industry")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("CollaborationId");

                            b1.ToTable("collaborations");

                            b1.WithOwner()
                                .HasForeignKey("CollaborationId");
                        });

                    b.OwnsOne("CollabFlowApi.Script", "Script", b1 =>
                        {
                            b1.Property<string>("CollaborationId")
                                .HasColumnType("text");

                            b1.Property<string>("Content")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("CollaborationId");

                            b1.ToTable("collaborations");

                            b1.WithOwner()
                                .HasForeignKey("CollaborationId");
                        });

                    b.Navigation("Deadline")
                        .IsRequired();

                    b.Navigation("Fee")
                        .IsRequired();

                    b.Navigation("Partner")
                        .IsRequired();

                    b.Navigation("Script")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
